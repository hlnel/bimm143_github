---
title: "Class 14: RNA-seq Mini Project"
author: "Helen Le (PID: A16300695)"
format: pdf
---

The authors report on differential analysis of lung fibroblasts in response to loss of the developmental transcription factor HOXA1.

# Section 1. Differential Expression Analysis

```{r}
library(DESeq2)
```

# Data Import
Read our counts and metadata CSV files.

```{r}
# Load our data files
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)
```

```{r}
# Import countdata
countData = read.csv(countFile, row.names=1)
head(countData)
```

**Q. Complete the code below to remove the troublesome first column from countData**

```{r}
# Note: we need to remove the odd first $length col
countData <- as.matrix(countData[, -1])
head(countData)
```

**Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).**

Tip: What will rowSums() of countData return and how could you use it in this context?
```{r}
countData = countData[rowSums(countData)!=0,]
head(countData)
```

# Running DESeq2

Let's setup the DESeqDataSet object required for the DESeq() function and then run the DESeq pipeline.
```{r}
dds = DESeqDataSetFromMatrix(countData=countData,
                             colData=colData,
                             design=~condition)
dds = DESeq(dds)
```

```{r}
dds
```

Let's get results for the HoxA1 knockdown versus control siRNA (remember that these were labeled as "hoxa1_kd" and "control_sirna" in our original colData metaFile input to DESeq
```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```

**Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.**
```{r}
summary(res)
```

> Q. How many genes do we have left?

```{r}
nrow(res)
```
There are 15975 genes left after excluding genes.

## Volcano plot

Let's make a volcano plot measuring log2 fold change vs. -log adjusted p-value.
```{r}
plot(res$log2FoldChange, -log(res$padj))
```

**Q. Improve this plot by completing the below code, which adds color and axis labels**

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (abs(res$padj < 0.01)) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```

## Adding gene annotation

Our pathway analysis downstream will use KEGG pathways. Since genes in KEGG pathways are annotated with Entrez gene IDS, let's add them.

**Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.**

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)
```

```{r}
res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

**Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.**

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

# Section 2. Pathway Analysis

```{r}
#/message: false
library(pathview)
library(gage)
library(gageData)
```

```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

Assign Entrez gene IDs to fold change results from DESeq2 analysis.
```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

Now, let's run the `gage` pathway analysis:
```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

Let's look at the first few (less) pathway results:
```{r}
head(keggres$less)
```

Let's use the `pathview()` function to make a pathway plot with our RNA-Seq expression results shown in color.

Here, let's use "hsa04110 Cell cycle" for our pathway.id.

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```
![](hsa04110.pathview.png)

You can play around with the input arguments for different outputs.
```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

Let's focus on the top 5 up-regulated pathways.
```{r}
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the (8 chr long) KEGG pathway IDs for pathview plotting
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
# Draw a plot using the `pathview()` function
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

![hsa04640](hsa04640.pathview.png)

![hsa04630](hsa04630.pathview.png)

![hsa00140](hsa00140.pathview.png)

![hsa04142](hsa04142.pathview.png)

![hsa04330](hsa04330.pathview.png)

**Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-regulated pathways?**

```{r}
keggresdown <- rownames(keggres$less)[1:5]

# Extract the (8 chr long) KEGG pathway IDs for pathview plotting
keggresdownids = substr(keggresdown, start=1, stop=8)
keggresdownids
```

```{r}
# Draw a plot using the `pathview()` function
pathview(gene.data=foldchanges, pathway.id=keggresdownids, species="hsa")
```

Attached below are the pathview figures for the top 5 down-regulated pathways:
![hsa04110](hsa04110.pathview.png)

![hsa03030](hsa03030.pathview.png)

![hsa03013](hsa03013.pathview.png)

![hsa03440](hsa03440.pathview.png)

![hsa04114](hsa04114.pathview.png)

# Section 3. Gene Ontology (GO)

We can do the same style of analysis with GO instead of KEGG here.
```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

head(gobpres$less)
```

# Section 4. Reactome Analysis

Let's now conduct over-representation enrichment analysis and pathway-topology analysis with Reactome using the previous list of significant genes generated from our differential expression results above.

First, Using R, output the list of significant genes at the 0.05 level as a plain text file:
```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```
Insert this txt file into the Reactome website (https://reactome.org/PathwayBrowser/#TOOL=AT) and view the results.

**Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?**
"Cell Cycle, Mitotic" has the most significant "Entities p-value". The most significant pathways listed do not match the previous KEGG results. This could be caused from drawing their information from different databases.
